---
import { getCollection, render } from "astro:content";
import ContentLayout from "../../layouts/ContentLayout.astro";
import { generateAutoSummary } from "../../util/generateAutoSummary";

export async function getStaticPaths() {
  const blogArray = await getCollection("blogs");
  return blogArray.map((blog) => {
    return {
      params: { blog: blog.id.split("/").at(-1) },
      props: { blog },
    };
  });
}

const { blog } = Astro.props;

const title =
  blog.data.title ||
  blog.filePath?.split("/").at(-1)?.slice(0, -3) ||
  blog.id.split("/").at(-1) ||
  "untitled";

const autoSummary = generateAutoSummary(blog.body || "", blog.data.summary);

const { Content } = await render(blog);
---

<ContentLayout title={title} summary={autoSummary}>
  <div slot="header" class="flex flex-col gap-y-2 items-center">
    <h1
      id={blog.data.title}
      class="text-4xl sm:text-5xl font-bold text-center"
      transition:name={title}
    >
      {title}
    </h1>
    <div
      class="items-center w-full justify-evenly flex gap-x-5 text-sm text-zinc-400"
    >
      <p class="text-balance" transition:name={`${title} published`}>
        Published: {blog.data.published?.toUTCString().slice(0, -13)}
      </p>
      {
        blog.data.edited && (
          <p class="text-balance">
            Edited: {blog.data.edited?.toUTCString().slice(0, -13)}
          </p>
        )
      }
      {
        blog.body && (
          <p class="whitespace-nowrap" transition:name={`${title} read-time`}>
            ~{Math.floor(blog.body.split(" ").length / 238)} min read
          </p>
        )
      }
    </div>
  </div>

  <Content />
</ContentLayout>
