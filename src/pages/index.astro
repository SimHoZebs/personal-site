---
import { Image } from "astro:assets";
import { getCollection } from "astro:content";
import profilePic from "../assets/profile.jpg";
import Footer from "../components/Footer.astro";
import Project from "../components/Project.astro";
import Layout from "../layouts/Layout.astro";
import links from "../util/links";

// Get all entries from a collection.
// Requires the name of the collection as an argument.
// Example: retrieve `src/content/blog/**`
const allProject = (await getCollection("projects")).filter(
  (project) => !project.data.isArchive,
);
allProject.sort((b, a) => b.data.order - a.data.order);

const allBlog = (await getCollection("blogs"))
  .filter((blog) => blog.data.published && !blog.data.isArchive)
  .sort((b, a) => {
    return a.data.published!.getTime() - b.data.published!.getTime();
  });

const allBlogMetadata = allBlog.map((blog) => {
  const body = blog.body.split("\n");

  //index 0 is frontmatter
  let summary = body[1].trim();

  let i = 2;
  const markdown = /^[!#*>]/;
  const ending = /[\.!?;~:]$/;
  while (
    (summary.match(markdown) || !summary.match(ending)) &&
    i < body.length - 1
  ) {
    if (summary.match(markdown)) summary = body[i].trim();
    else summary += `\n ${body[i].trim()}`;

    i++;
  }

  const readMin = Math.floor(blog.body.split(" ").length / 238);

  return {
    readMin,
    summary,
  };
});
---

<Layout title="Simho">
  <main
    class="overflow-x-hidden flex px-5 pt-20 flex-col w-full h-full justify-between gap-10 items-center"
  >
    <div
      class="flex w-full flex-col items-start md:flex-row-reverse justify-evenly max-w-6xl gap-y-12 gap-x-4"
    >
      <section
        class="gap-y-2 items-center flex flex-col h-fit border-slate-700 p-3 rounded-xl md:bg-slate-800 md:border w-full md:w-64 min-w-[16rem]"
      >
        <Image
          src={profilePic}
          alt="Profile pic"
          height={180}
          class="rounded-lg border-slate-700 border-1"
        />
        <div class="flex items-center md:items-start flex-col gap-y-2">
          <p class="text-2xl font-semibold text-center md:text-start">
            Hi! I'm Ho Sim <br /> (심호).
          </p>

          <p class="flex gap-y-1 flex-col text-center md:text-start">
            I'm building a system that privately organize personal data and
            create apps that reveal insights from them.
            <span></span>
            I'm invested in technologies that empower individuals to get more done
            and enhance digital freedom.
          </p>

          <a class="text-indigo-400" href="./me">more about me</a>

          <div class="flex self-center justify-between">
            <!-- <a href="" class="font-semibold text-indigo-400">Learn more</a> -->
            <nav class="flex gap-4">
              {
                links.map((link) => (
                  <a
                    title={link.name}
                    href={link.link}
                    class={"flex w-6 h-6 hover:text-indigo-400 " + link.icon}
                  >
                    <p>{link.name}</p>
                  </a>
                ))
              }
            </nav>
          </div>
        </div>
      </section>

      <section class="flex flex-col gap-y-3 items-center justify-center">
        <div class="text-center flex-col flex gap-1">
          <h2 class="text-5xl font-extrabold">Projects</h2>
          <p class="text-slate-400 text-sm">Click to expand</p>
        </div>

        <div class="flex flex-wrap gap-4 text-center justify-center">
          {
            allProject.map((project) => (
              <Project
                title={project.data.title}
                ref={project.slug.split("/").at(-1) || ""}
                img={project.data.headerImage}
                alt={project.data.headerAlt}
              >
                <p
                  class="text-balance text-center"
                  transition:name={project.data.title + " summary"}
                >
                  {project.data.summary}
                </p>
              </Project>
            ))
          }
        </div>
      </section>
    </div>

    <section class="w-full flex items-center flex-col gap-y-10 max-w-xl">
      <h1 class="text-5xl font-extrabold">Writing</h1>
      {
        allBlog.length ? (
          allBlog.map((blog, i) => (
            <a
              class="flex w-full flex-col gap-y-1"
              aria-label={`Read ${blog.data.title || blog.id.split("/").at(-1)?.slice(0, -3)}`}
              href={"/blogs/" + blog.slug.split("/").at(-1)}
            >
              <article
                id="blog"
                data-link={blog.slug.split("/").at(-1)}
                class="flex flex-col w-full max-w-xl gap-y-1 hover:cursor-pointer"
              >
                <h2
                  id={blog.data.title || blog.id.slice(0, -3)}
                  class="text-3xl font-bold"
                  transition:name={
                    blog.data.title || blog.id.split("/").at(-1)?.slice(0, -3)
                  }
                >
                  {blog.data.title || blog.id.split("/").at(-1)?.slice(0, -3)}
                </h2>

                <div class="flex gap-x-5">
                  <p class="text-sm text-zinc-400">
                    {blog.data.published?.toLocaleDateString()}
                  </p>
                  <p class="text-sm text-zinc-400">
                    ~{allBlogMetadata[i].readMin} min read
                  </p>
                </div>

                <p class="flex flex-col w-full text-zinc-200">
                  {blog.data.summary ||
                    allBlogMetadata[i].summary
                      .split("\n")
                      .map((line) => (
                        <p class="w-full text-start text-zinc-200">{line}</p>
                      ))}
                </p>
              </article>
              <div class="self-start font-semibold text-indigo-300">
                Read more
              </div>
            </a>
          ))
        ) : (
          <p>Coming soon...</p>
        )
      }
    </section>

    <Footer />
  </main>
</Layout>
